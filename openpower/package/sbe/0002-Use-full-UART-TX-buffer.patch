From abe01ee060b952a17a1ebfa55c4e79e864c5b9fc Mon Sep 17 00:00:00 2001
From: Stewart Smith <stewart@flamingspork.com>
Date: Tue, 31 Dec 2019 13:03:38 -0800
Subject: [PATCH 2/2] Use full UART TX buffer

This patch makes us use the full TX buffer of the UART rather than
waiting for each character to go through. This practically means we
get a *massive* IPL speed up.

Measured on my Raptor Blackbird with P9N DD2.21, from "Welcome to SBE"
to "Booting Hostboot" (timed on a stopwatch):
Before (with UART output): 15 seconds
With this patch (with UART output): 10 seconds.

A full 33% reduction in boot time for SBE is nothing to sneeze at!

Signed-off-by: Stewart Smith <stewart@flamingspork.com>
---
 src/sbefw/core/sbeConsole.C | 34 +++++++++++++++-------------------
 1 file changed, 15 insertions(+), 19 deletions(-)

diff --git a/src/sbefw/core/sbeConsole.C b/src/sbefw/core/sbeConsole.C
index d3d3f3f6..7c70e26b 100644
--- a/src/sbefw/core/sbeConsole.C
+++ b/src/sbefw/core/sbeConsole.C
@@ -165,7 +165,9 @@ static void uartPutChar(char c)
 {
     #define SBE_FUNC "uartPutChar"
     uint32_t rc = SBE_SEC_OPERATION_SUCCESSFUL;
-    do {
+    static unsigned char tx_room = 16;
+    if (tx_room < 1)
+    {
         static const uint64_t DELAY_NS = 100;
         static const uint64_t DELAY_LOOPS = 100000000;
 
@@ -188,27 +190,21 @@ static void uartPutChar(char c)
         if(rc != SBE_SEC_OPERATION_SUCCESSFUL)
         {
             SBE_ERROR(SBE_FUNC " LSR read error.");
-            break;
-        }
-        if(data == LSR_BAD)
-        {
+        } else if(data == LSR_BAD) {
             SBE_ERROR(SBE_FUNC " LSR_BAD data error.");
-            break;
-        }
-        if(loops >= DELAY_LOOPS)
-        {
+        } else if(loops >= DELAY_LOOPS) {
             SBE_ERROR(SBE_FUNC " FIFO timeout.");
-            break;
-        }
-
-        rc = writeReg(THR, c);
-        if(rc != SBE_SEC_OPERATION_SUCCESSFUL)
-        {
-            SBE_ERROR(SBE_FUNC " failure to write THR");
-            break;
-        }
+        } else {
+	    tx_room = 16;
+	}
+    }
 
-    } while(0);
+    rc = writeReg(THR, c);
+    if(rc != SBE_SEC_OPERATION_SUCCESSFUL) {
+        SBE_ERROR(SBE_FUNC " failure to write THR");
+    } else {
+        tx_room--;
+    }
 
     #undef SBE_FUNC
 }
-- 
2.24.1

